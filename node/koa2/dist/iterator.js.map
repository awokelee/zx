{"version":3,"sources":["../src/iterator.js"],"names":["makeIterator","arr","i","length","gen","console","log","next","value","done"],"mappings":";;mDAqBUA,Y;;AArBV;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAUA,YAAV,CAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACWC,WADX,GACa,CADb;;AAAA;AAAA,gBACgBA,IAAID,IAAIE,MADxB;AAAA;AAAA;AAAA;;AAAA;AAAA,iBAEUF,IAAIC,CAAJ,CAFV;;AAAA;AACgCA,aADhC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,IAAME,MAAMJ,aAAa,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAAb,CAAZ;;AAEAK,QAAQC,GAAR,CAAYF,IAAIG,IAAJ,GAAWC,KAAvB;AACAH,QAAQC,GAAR,CAAYF,IAAIG,IAAJ,GAAWC,KAAvB;AACAH,QAAQC,GAAR,CAAYF,IAAIG,IAAJ,GAAWC,KAAvB;AACAH,QAAQC,GAAR,CAAYF,IAAIG,IAAJ,GAAWE,IAAvB","file":"iterator.js","sourcesContent":["/* function makeIterator (arr) {\n  let nextIndex = 0\n\n  return {\n    next: () => {\n      if (nextIndex < arr.length) {\n        return {value: arr[nextIndex++], done: false}\n      } else {\n        return {done: true}\n      }\n    }\n  }\n}\n\nconst it = makeIterator(['吃饭', '睡觉', '打豆豆'])\n\nconsole.log(it.next().value)\nconsole.log(it.next().value)\nconsole.log(it.next().value)\nconsole.log(it.next().done) */\n\nfunction *makeIterator (arr) {\n  for (let i=0; i < arr.length; i++) {\n    yield arr[i]\n  }\n}\n\nconst gen = makeIterator(['吃饭', '睡觉', '打豆豆'])\n\nconsole.log(gen.next().value)\nconsole.log(gen.next().value)\nconsole.log(gen.next().value)\nconsole.log(gen.next().done)"]}