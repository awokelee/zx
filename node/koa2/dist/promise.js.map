{"version":3,"sources":["../src/promise.js"],"names":["util","require","promisify","fs","readFile","then","JSON","parse","console","log","data","name","catch","err"],"mappings":";;AAAA;;AAEA;;;;;;AAMA;;;;;;;;;AASA;;;;;;;;AAQA;AACA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;;AAEAD,KAAKE,SAAL,CAAeC,GAAGC,QAAlB,EAA4B,gBAA5B,EACGC,IADH,CACQC,KAAKC,KADb,EAEGF,IAFH,CAEQ,gBAAQ;AACZG,UAAQC,GAAR,CAAYC,KAAKC,IAAL,GAAY,KAAxB;AACD,CAJH,EAKGC,KALH,CAKS,eAAO;AACZJ,UAAQC,GAAR,CAAYI,GAAZ;AACD,CAPH","file":"promise.js","sourcesContent":["// const fs = require('fs')\n\n/* fs.readFile('./package.json', (err, data) => {\n  if (err) return console.log(err)\n  data = JSON.parse(data)\n  console.log(data.name)\n}) */\n\n/* function readFileAsync(path) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(path, (err, data) => {\n      if (err) reject(err)\n      else resolve(data)\n    })\n  })\n} */\n\n/* readFileAsync('./package.json')\n  .then(data => {\n    data = JSON.parse(data)\n    console.log(data.name)\n  }).catch(err => {\n    console.log(err)\n  }) */\n\n// promisify\nconst util = require('util')\n\nutil.promisify(fs.readFile)('./package.json')\n  .then(JSON.parse)\n  .then(data => {\n    console.log(data.name + '===')\n  })\n  .catch(err => {\n    console.log(err)\n  })"]}